description: Gives developers the ability to push apps to a dedicated set of compute
  instances.
form_types:
- description: |
    Configure security and routing services for your isolation segment.
  label: Networking
  name: networking
  property_inputs:
  - description: |
      If you are deploying onto an infrastructure that does not support
      automated assignment of routers to load balancers (vSphere), or you are
      intending to manually configure your load balancer with the IP
      addresses of the routers, you should enter static IP addresses here
      that will be used by the routers. On infrastructures where automated
      load balancer assignment is supported (AWS, GCP, Azure), this field can
      be left blank and the "Load Balancers" field on the "Resource Config"
      tab can be filled out with the correct load balancer assignment.
    label: Router IPs
    reference: .isolated_router.static_ips
  - description: |
      If you are using HAProxy, enter its IP address(es). The addresses must
      be within your subnet CIDR block. Point your DNS to this IP address
      unless you are using your own load balancer.
    label: HAProxy IPs
    reference: .isolated_ha_proxy.static_ips
  - label: Certificates and Private Keys for HAProxy and Router
    property_inputs:
    - description: A human-readable name describing the use of this certificate.
      label: Name
      reference: name
    - description: |
        This certificate is used to terminate SSL traffic at either the
        HAProxy or Router. The certificate can have multiple domains
        attributed to it, for example if you have separate system and
        application domains.
      label: Certificate and Private Key for HAProxy and Router
      reference: certificate
    reference: .properties.networking_poe_ssl_certs
  - description: |
      In addition to well-known, public CAs, and those trusted via the BOSH
      trusted certificates collection, these certificates can be used to
      validate the certificates from incoming client requests. All CA
      certificates should be appended together into a single collection of
      PEM-encoded entries.
    label: Certificate Authorities Trusted by Router and HAProxy
    reference: .properties.routing_custom_ca_certificates
  - label: Minimum version of TLS supported by HAProxy and Router
    reference: .properties.routing_minimum_tls_version
    selector_property_inputs:
    - label: TLSv1.0
      reference: .properties.routing_minimum_tls_version.tls_v1_0
    - label: TLSv1.1
      reference: .properties.routing_minimum_tls_version.tls_v1_1
    - label: TLSv1.2
      reference: .properties.routing_minimum_tls_version.tls_v1_2
  - description: |
      To comply with GDPR, select one of the options to disable logging
      of client IPs. If the source IP exposed by your load balancer is
      its own, choose to disable logging of XFF header only. If the
      source IP exposed by your load balancer is that of the downstream
      client, choose to disable logging of the source IP also.
    label: Logging of Client IPs in CF Router
    reference: .properties.routing_log_client_ips
    selector_property_inputs:
    - label: Log client IPs
      reference: .properties.routing_log_client_ips.log_client_ips
    - label: Disable logging of X-Forwarded-For header only
      reference: .properties.routing_log_client_ips.disable_x_forwarded_for
    - label: Disable logging of both source IP and X-Forwarded-For header
      reference: .properties.routing_log_client_ips.disable_all_log_client_ips
  - label: |
      Configure support for the X-Forwarded-Client-Cert header. This header
      can be used by applications to verify the requester via mutual TLS.
      The option you should select depends upon where you will be terminating
      the TLS connection for the first time.
    reference: .properties.routing_tls_termination
    selector_property_inputs:
    - label: |
        TLS terminated for the first time at infrastructure load balancer
      reference: .properties.routing_tls_termination.load_balancer
    - label: |
        TLS terminated for the first time at HAProxy
      reference: .properties.routing_tls_termination.ha_proxy
    - label: |
        TLS terminated for the first time at the Router
      reference: .properties.routing_tls_termination.router
  - label: HAProxy behavior for Client Certificate Validation
    reference: .properties.haproxy_client_cert_validation
    selector_property_inputs:
    - label: |
        HAProxy does not request client certificates.
      reference: .properties.haproxy_client_cert_validation.none
    - label: |
        HAProxy requests but does not require client certificates.
        This option is necessary if you want to enable mTLS for applications
        and TLS is terminated for the first time at HAProxy
      reference: .properties.haproxy_client_cert_validation.request
  - label: Router behavior for Client Certificate Validation
    reference: .properties.router_client_cert_validation
    selector_property_inputs:
    - label: |
        Router does not request client certificates. When used in combination
        with "TLS terminated for the first time at the Router", a XFCC header
        will not be forwarded to applications.
      reference: .properties.router_client_cert_validation.none
    - label: |
        Router requests but does not require client certificates.
      reference: .properties.router_client_cert_validation.request
    - label: |
        Router requires client certificates.
      reference: .properties.router_client_cert_validation.require
  - description: |
      An ordered, colon-delimited list of Golang supported TLS cipher suites
      in OpenSSL format. The recommended setting is
      "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384".
      Operators should verify that these are supported by any clients or
      downstream components that will initiate TLS handshakes with the Router.
    label: TLS Cipher Suites for Router
    reference: .properties.gorouter_ssl_ciphers
  - description: |
      An ordered, colon-delimited list of TLS cipher suites in OpenSSL format.
      The recommended setting is
      "DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384".
      Operators should verify that these are supported by any clients or downstream
      components that will initiate TLS handshakes with the HAProxy.
    label: TLS Cipher Suites for HAProxy
    reference: .properties.haproxy_ssl_ciphers
  - label: |
      HAProxy forwards requests to Router over TLS. When enabled, HAProxy
      will forward all requests to the Router over TLS. HAProxy will use
      the CA provided  to verify the certificates provided by the Router.
    reference: .properties.haproxy_forward_tls
    selector_property_inputs:
    - label: Enable
      property_inputs:
      - description: |
          You need to provide a certificate authority for the certificate
          and key provided in the "Certificate and Private Key for HAProxy
          and Router" field. HAProxy will verify those certificates using
          this CA when establishing a connection. If you generated that
          certificate and key using the "Generate RSA Certificate" feature,
          then your CA is the Ops Manager CA, and can be found by visiting
          the "/api/v0/certificate_authorities" API endpoint.
        label: Certificate Authority for HAProxy Backend
        reference: .properties.haproxy_forward_tls.enable.backend_ca
      reference: .properties.haproxy_forward_tls.enable
    - label: Disable
      reference: .properties.haproxy_forward_tls.disable
  - label: HAProxy support for HSTS
    reference: .properties.haproxy_hsts_support
    selector_property_inputs:
    - label: Enable
      property_inputs:
      - label: Max Age in Seconds
        reference: .properties.haproxy_hsts_support.enable.max_age
      - label: Include Subdomains
        reference: .properties.haproxy_hsts_support.enable.include_subdomains
      - label: Enable Preload
        reference: .properties.haproxy_hsts_support.enable.enable_preload
      reference: .properties.haproxy_hsts_support.enable
    - label: Disable
      reference: .properties.haproxy_hsts_support.disable
  - description: |
      You can disable SSL verification if you are using your own self-signed
      certificates that are not from a trusted CA.
    label: Disable SSL certificate verification for this environment
    reference: .properties.skip_cert_verify
  - description: When checked, HAProxy and Gorouter will not listen on port 80.
    label: Disable HTTP on HAProxy and Gorouter
    reference: .properties.routing_disable_http
  - description: |
      If checked, this turns on the secure flag for cookies generated by
      router.
    label: Disable insecure cookies on the Router
    reference: .isolated_router.disable_insecure_cookies
  - description: |
      If checked, the router will include Zipkin tracing headers on all
      incoming requests.
    label: Enable Zipkin tracing headers on the router
    reference: .isolated_router.enable_zipkin
  - description: |
      When enabled, the Router will write access logs to the local disk.
      Under some circumstances, it is advisable to disable this feature
      to prevent Router from filling the local disk entirely with the
      contents of access logs.
    label: Enable Router to write access logs locally
    reference: .isolated_router.enable_write_access_logs
  - description: |
      When enabled, Gorouter will parse each request for the presence
      of PROXY metadata. This comes with a performance penalty.
      If a client IP is sent this way, as when a load balancer
      terminates TLS but doesn't support HTTP, Gorouter will set
      the X-Forwarded-For header to this value.
    label: Enable support for PROXY protocol in CF Router
    reference: .properties.router_enable_proxy
  - description: |
      Maximum concurrent TCP connections per backend for each instance of
      the Router. A value of 0 means unlimited.
    label: Max Connections Per Backend
    reference: .properties.router_backend_max_conn
  - label: Enable Keepalive Connections for Router
    reference: .properties.router_keepalive_connections
    selector_property_inputs:
    - label: Enable
      reference: .properties.router_keepalive_connections.enable
    - label: Disable
      reference: .properties.router_keepalive_connections.disable
  - description: |
      Timeout for connections from Router (and HAProxy, if you use it) to
      applications and system components. Increase this to accommodate larger
      uploads over connections with high latency.
    label: Router Timeout to Backends (in seconds)
    reference: .isolated_router.request_timeout_in_seconds
  - description: |
      Specifies the amount of time, in seconds, that the Router will continue
      to accept connections before shutting down. During this period the
      healthcheck will report unhealthy to cause load balancers to fail over
      to other Routers. This value should be greater than or equal to the max
      time it could take your load balancer to consider a Router instance
      unhealthy, given contiguous failed healthchecks.
    label: Load Balancer Unhealthy Threshold
    reference: .isolated_router.drain_wait
  - description: |
      Specifies the amount of time, in seconds, to wait until declaring the
      router instance started. This allows an external load balancer time to
      register the instance as healthy.
    label: Load Balancer Healthy Threshold
    reference: .isolated_router.lb_healthy_threshold
  - description: |
      A comma-separated list of HTTP headers that will annotate access log
      events on the GoRouter.
    label: HTTP Headers to Log
    reference: .isolated_router.extra_headers_to_log
  - description: |
      Buffer size (in bytes) to use for requests, any requests larger
      than this (large cookies or query strings) will result in a
      gateway error. The default value is 16384.
    label: HAProxy Request Max Buffer Size
    reference: .properties.haproxy_max_buffer_size
  - description: |
      A comma-separated list of domains to protect from requests from
      unknown sources.  Use this property in conjunction with
      "Trusted CIDRs" to protect these domains from requests from
      unknown sources.
    label: HAProxy Protected Domains
    reference: .isolated_ha_proxy.internal_only_domains
  - description: |
      A space-separated list of CIDRs allowed to make requests
      to the domains listed in the "Protected Domains" field. For example,
      specifying 10.0.1.0/24 would allow any requests originating at a host IP
      in that range to reach applications or services hosted on the
      "Protected Domains" list.
    label: HAProxy Trusted CIDRs
    reference: .isolated_ha_proxy.trusted_domain_cidrs
  - description: |
      DNS search domains to be used in containers. A comma-separated list can
      be specified.
    label: DNS Search Domains
    reference: .properties.cf_networking_search_domains
  - label: |
      Router Sharding Mode: When "Isolation Segment Only" is selected, the
      routers of this tile will only have knowledge of applications deployed to
      the Cells of this tile; all other requests will receive a 404 response.
      When "No Isolation Segment" is selected, the routers of this tile will
      reject requests for any isolation segment. Choose "No Isolation Segments"
      to add a group of routers for the Pivotal Application Service tile, as when a private
      point of entry for the system domain is desired."
    reference: .properties.routing_table_sharding_mode
    selector_property_inputs:
    - label: Isolation Segment Only
      reference: .properties.routing_table_sharding_mode.isolation_segment_only
    - label: No Isolation Segment
      reference: .properties.routing_table_sharding_mode.no_isolation_segment
- description: |
    Enable custom configuration that supports your applications at a container
    level.
  label: Application Containers
  name: application_containers
  property_inputs:
  - description: |
      If you use private Docker image registries that are secured with
      self-signed certificates, enter them here as a comma-delimited list. List
      each registry as either an IP:Port tuple or a Hostname:Port tuple.
    label: Private Docker Insecure Registry Whitelist
    placeholder: |
      10.10.10.10:8888,example.com:8888
    reference: .isolated_diego_cell.insecure_docker_registry_list
  - description: |
      This field is used as the placement tag for your Diego Cells. It should
      be unique. Use this name to configure an Isolation Segment with the Cloud
      Controller.
    label: Segment Name
    reference: .isolated_diego_cell.placement_tag
  - label: Docker Images Disk-Cleanup Scheduling on Cell VMs
    reference: .properties.garden_disk_cleanup
    selector_property_inputs:
    - label: Never clean up Cell disk-space
      reference: .properties.garden_disk_cleanup.never
    - label: Routinely clean up Cell disk-space
      reference: .properties.garden_disk_cleanup.routine
    - label: Clean up disk-space once threshold is reached
      property_inputs:
      - description: |
          Disk cleanup will initiate whenever a Cell has exceeded this much
          disk-space for filesystem layers.
        label: Threshold of Disk-Used (MB)
        reference: .properties.garden_disk_cleanup.threshold.cleanup_threshold_in_mb
      reference: .properties.garden_disk_cleanup.threshold
  - label: |
      Enabling NFSv3 volume services will allow application developers to bind
      existing NFS volumes to their applications for shared file access.
    reference: .properties.nfs_volume_driver
    selector_property_inputs:
    - label: Enable
      property_inputs:
      - description: |
          Service Account User name (required for LDAP integration only)
        label: LDAP Service Account User
        reference: .properties.nfs_volume_driver.enable.ldap_service_account_user
      - description: |
          Service Account Password (required for LDAP integration only)
        label: LDAP Service Account Password
        reference: .properties.nfs_volume_driver.enable.ldap_service_account_password
      - description: |
          Server hostname or IP address (required for LDAP integration only)
        label: LDAP Server Host
        reference: .properties.nfs_volume_driver.enable.ldap_server_host
      - description: |
          Server port (required for LDAP integration only). Defaults to 389.
        label: LDAP Server Port
        reference: .properties.nfs_volume_driver.enable.ldap_server_port
      - description: |
          FQDN for user records searched during user uid resolution
          (required for LDAP integration only). For example, the FQDN
          value can be specified as "cn=Users,dc=corp,dc=test,dc=com".
        label: LDAP User Fully-Qualified Domain Name
        placeholder: cn=Users,dc=corp,dc=test,dc=com
        reference: .properties.nfs_volume_driver.enable.ldap_user_fqdn
      reference: .properties.nfs_volume_driver.enable
    - label: Disable
      reference: .properties.nfs_volume_driver.disable
  - description: |
      Enabling the GrootFS container image plugin is recommended.
      However, if you experience issues with GrootFS, you can disable the plugin
      and rollback to the image plugin that is built into Garden RunC.
      It is recommended to recreate all VMs in the BOSH Director config
      when toggling this option on or off.
    label: Enable the GrootFS container image plugin for Garden RunC
    reference: .properties.enable_grootfs
  - description: |
      Improves resiliency and consistency for application routes.
    label: Router uses TLS to verify application identity
    reference: .properties.rep_proxy_enabled
- description: |
    Optionally configure rsyslog to forward platform component logs
    to an external service.
    If you do not fill these fields,
    platform logs will not be forwarded
    but will remain available on the component VMs
    and for download via Ops Manager.
  label: System Logging
  name: system_logging
  property_inputs:
  - label: |
      Do you want to configure syslog for system components?
    reference: .properties.system_logging
    selector_property_inputs:
    - label: "No"
      reference: .properties.system_logging.disabled
    - label: "Yes"
      property_inputs:
      - description: |
          The aggregator must be reachable from the Isolation Segment network,
          accept TCP, UDP or RELP connections, and use the RELP protocol (e.g.
          rsyslogd). You can also configure this with an IP address.
        label: Address
        reference: .properties.system_logging.enabled.host
      - description: |
          The typical syslogd port is 514. Ensure syslogd is listening on
          external interfaces.
        label: Port
        reference: .properties.system_logging.enabled.port
      - description: |
          Select the transport protocol for forwarding logs.
        label: Transport Protocol
        reference: .properties.system_logging.enabled.protocol
      - description: |
          When checked both Permitted Peer and TLS CA Certificate are required.
        label: Enable TLS
        reference: .properties.system_logging.enabled.tls_enabled
      - description: |
          Either the accepted fingerprint (SHA1) or name of remote peer, e.g.
          *.example.com
        label: Permitted Peer
        reference: .properties.system_logging.enabled.tls_permitted_peer
      - description: |
          This certificate will ensure that logs get securely transported to
          the syslog destination
        label: TLS CA Certificate
        reference: .properties.system_logging.enabled.tls_ca_cert
      - description: |
          Workaround to avoid truncation of very long
          (> 1024 bytes)
          log lines.
          May negatively impact performance.
        label: Use TCP for file forwarding local transport
        reference: .properties.system_logging.enabled.use_tcp_for_file_forwarding_local_transport
      - description: |
          Accepts configuration for rsyslog
          in the rainerscript syntax.
          For example,
          'if ($app-name startswith "exampleComponent") then stop'
          can be used to drop all traffic
          from a particular component.
          Entered configuration will be applied
          prior to the forwarding rule.
        label: Custom rsyslog Configuration
        reference: .properties.system_logging.enabled.syslog_rule
      reference: .properties.system_logging.enabled
- description: |
    These are several features that may require a greater understanding of
    Cloud Foundry system components and their more recently introduced
    capabilities.
  label: Advanced Features
  name: advanced_features
  property_inputs:
  - label: Cell Memory Capacity (MB)
    reference: .isolated_diego_cell.executor_memory_capacity
  - label: Cell Disk Capacity (MB)
    reference: .isolated_diego_cell.executor_disk_capacity
icon_image: 
install_time_verifiers: []
job_types:
- description: HAProxy is the default load balancer for SSL termination. Alternatively,
    you can use your own load balancer and forward traffic to the Pivotal CF Elastic
    Runtime router IP. Self signed certificates will function properly.
  dynamic_ip: 0
  instance_definition:
    configurable: true
    constraints:
      min: 0
    default: 3
    label: Instances
    name: instances
    type: integer
  label: HAProxy
  max_in_flight: 1
  name: isolated_ha_proxy
  property_blueprints:
  - configurable: true
    name: static_ips
    optional: true
    type: ip_ranges
  - configurable: true
    name: internal_only_domains
    optional: true
    type: string_list
  - configurable: true
    name: trusted_domain_cidrs
    optional: true
    type: string
  resource_definitions:
  - configurable: true
    constraints:
      min: 1024
    default: 1024
    label: RAM
    name: ram
    type: integer
  - configurable: true
    constraints:
      min: 2048
    default: 2048
    label: Ephemeral Disk
    name: ephemeral_disk
    type: integer
  - configurable: false
    default: 0
    label: Persistent Disk
    name: persistent_disk
    type: integer
  - configurable: true
    constraints:
      min: 1
    default: 1
    label: CPU
    name: cpu
    type: integer
  resource_label: HAProxy
  single_az_only: false
  static_ip: 1
  templates:
  - consumes: |
      consul_common: {from: consul_common_link, deployment: ((  ..cf.deployment_name  )) }
      consul_client: {from: consul_client_link, deployment: ((  ..cf.deployment_name  )) }
      consul_server: nil
    name: consul_agent
    release: consul
  - manifest: |
      ha_proxy:
        backend_ca_file: (( .properties.haproxy_forward_tls.enable.backend_ca.value ))
        backend_crt: |
          (( .properties.haproxy_client_certificate.cert_pem ))
          (( .properties.haproxy_client_certificate.private_key_pem ))
        backend_port: (( .properties.haproxy_forward_tls.selected_option.parsed_manifest(backend_port) ))
        backend_ssl: (( .properties.haproxy_forward_tls.selected_option.parsed_manifest(backend_ssl) ))
        buffer_size_bytes: (( .properties.haproxy_max_buffer_size.value ))
        client_cert: (( .properties.haproxy_client_cert_validation.selected_option.parsed_manifest(client_cert_validation) ))
        client_timeout: (( .isolated_router.request_timeout_in_seconds.value ))
        disable_http: (( .properties.routing_disable_http.value ))
        disable_tls_10: (( .properties.routing_minimum_tls_version.selected_option.parsed_manifest(disable_tls_10) ))
        disable_tls_11: (( .properties.routing_minimum_tls_version.selected_option.parsed_manifest(disable_tls_11) ))
        enable_health_check_http: true
        hsts_enable: (( .properties.haproxy_hsts_support.selected_option.parsed_manifest(hsts_enable) ))
        hsts_include_subdomains: (( .properties.haproxy_hsts_support.selected_option.parsed_manifest(hsts_include_subdomains) ))
        hsts_max_age: (( .properties.haproxy_hsts_support.selected_option.parsed_manifest(hsts_max_age) ))
        hsts_preload: (( .properties.haproxy_hsts_support.selected_option.parsed_manifest(hsts_preload) ))
        internal_only_domains: (( .isolated_ha_proxy.internal_only_domains.parsed_strings ))
        server_timeout: (( .isolated_router.request_timeout_in_seconds.value ))
        ssl_ciphers: (( .properties.haproxy_ssl_ciphers.value ))
        ssl_pem: (( .properties.networking_poe_ssl_certs.parsed_manifest(routing_certificates_and_private_keys) ))
        tcp_link_port: 2222
        trusted_domain_cidrs: (( .isolated_ha_proxy.trusted_domain_cidrs.value ))
    name: haproxy
    release: haproxy
  - manifest: |
      loggregator:
        tls:
          ca_cert: (( $ops_manager.ca_certificate ))
          metron:
            cert: (( .properties.metron_tls_cert.cert_pem ))
            key: (( .properties.metron_tls_cert.private_key_pem ))
    name: metron_agent
    release: loggregator
  - manifest: |
      syslog: (( .properties.system_logging.selected_option.parsed_manifest(syslog) ))
    name: syslog_forwarder
    release: syslog
- description: Routers route Internet traffic to applications placed in the isolation
    segment.
  dynamic_ip: 0
  instance_definition:
    configurable: true
    constraints:
      min: 0
    default: 3
    label: Instances
    name: instances
    type: integer
  label: Router
  max_in_flight: 1
  name: isolated_router
  property_blueprints:
  - configurable: true
    name: static_ips
    optional: true
    type: ip_ranges
  - configurable: true
    default: false
    name: disable_insecure_cookies
    type: boolean
  - default:
      identity: router_status
    name: status_credentials
    type: simple_credentials
  - configurable: true
    default: true
    name: enable_zipkin
    type: boolean
  - configurable: true
    default: true
    name: enable_write_access_logs
    type: boolean
  - configurable: true
    constraints:
      min: 1
    default: 900
    name: request_timeout_in_seconds
    type: integer
  - configurable: true
    name: extra_headers_to_log
    optional: true
    type: string_list
  - configurable: true
    default: 20
    name: drain_wait
    type: integer
  - configurable: true
    default: 20
    name: lb_healthy_threshold
    type: integer
  resource_definitions:
  - configurable: true
    constraints:
      min: 1024
    default: 1024
    label: RAM
    name: ram
    type: integer
  - configurable: true
    constraints:
      min: 2048
    default: 2048
    label: Ephemeral Disk
    name: ephemeral_disk
    type: integer
  - configurable: false
    default: 0
    label: Persistent Disk
    name: persistent_disk
    type: integer
  - configurable: true
    constraints:
      min: 1
      power_of_two: true
    default: 1
    label: CPU
    name: cpu
    type: integer
  resource_label: Router
  serial: true
  single_az_only: false
  static_ip: 1
  templates:
  - consumes: |
      consul_common: {from: consul_common_link, deployment: ((  ..cf.deployment_name  )) }
      consul_client: {from: consul_client_link, deployment: ((  ..cf.deployment_name  )) }
      consul_server: nil
    name: consul_agent
    release: consul
  - consumes: |
      nats: {from: nats, deployment: ((  ..cf.deployment_name  )) }
    manifest: |
      request_timeout_in_seconds: (( request_timeout_in_seconds.value ))
      router:
        backends:
          enable_tls: true
          max_conns: (( .properties.router_backend_max_conn.value ))
          cert_chain: (( .properties.routing_backends_client_cert.cert_pem ))
          private_key: (( .properties.routing_backends_client_cert.private_key_pem ))
        ca_certs: |
          (( .properties.routing_custom_ca_certificates.value ))
          (( $ops_manager.ca_certificate ))
          ((( /cf/diego-instance-identity-root-ca.certificate )))
        tracing:
          enable_zipkin: (( enable_zipkin.value ))
        write_access_logs_locally: (( enable_write_access_logs.value ))
        secure_cookies: (( disable_insecure_cookies.value ))
        status:
          user: router_status
          password: (( status_credentials.password ))
        route_services_secret: ((( router-route-services-secret )))
        client_cert_validation: (( .properties.router_client_cert_validation.selected_option.parsed_manifest(client_cert_validation) ))
        enable_proxy: (( .properties.router_enable_proxy.value ))
        disable_http: (( .properties.routing_disable_http.value ))
        cipher_suites: (( .properties.gorouter_ssl_ciphers.value ))
        enable_ssl: true
        max_idle_connections: (( .properties.router_keepalive_connections.selected_option.parsed_manifest(max_idle_connections) ))
        tls_pem: (( .properties.networking_poe_ssl_certs.parsed_manifest(routing_certificates_and_private_keys) ))
        min_tls_version: (( .properties.routing_minimum_tls_version.selected_option.parsed_manifest(min_tls_version) ))
        ssl_skip_validation: (( .properties.skip_cert_verify.value ))
        drain_wait: (( drain_wait.value ))
        load_balancer_healthy_threshold: (( lb_healthy_threshold.value ))
        extra_headers_to_log: (( extra_headers_to_log.parsed_strings ))
        routing_table_sharding_mode: (( .properties.routing_table_sharding_mode.selected_option.parsed_manifest(sharding_mode) ))
        isolation_segments: (( .properties.routing_table_sharding_mode.selected_option.parsed_manifest(isolation_segments) ))
        forwarded_client_cert: (( .properties.routing_tls_termination.selected_option.parsed_manifest(gorouter_forwarded_client_cert) ))
        disable_log_forwarded_for: (( .properties.routing_log_client_ips.selected_option.parsed_manifest(disable_log_forwarded_for) ))
        disable_log_source_ips: (( .properties.routing_log_client_ips.selected_option.parsed_manifest(disable_log_source_ips) ))
      routing_api:
        enabled: (( .properties.routing_table_sharding_mode.selected_option.parsed_manifest(routing_api_enabled) ))
      uaa:
        ca_cert: (( $ops_manager.ca_certificate ))
        ssl:
          port: 8443
        clients:
          gorouter:
            secret: (( ..cf.uaa.gorouter_client_credentials.password ))
    name: gorouter
    release: routing
  - manifest: |
      loggregator:
        tls:
          ca_cert: (( $ops_manager.ca_certificate ))
          metron:
            cert: (( .properties.metron_tls_cert.cert_pem ))
            key: (( .properties.metron_tls_cert.private_key_pem ))
    name: metron_agent
    release: loggregator
  - manifest: |
      syslog: (( .properties.system_logging.selected_option.parsed_manifest(syslog) ))
    name: syslog_forwarder
    release: syslog
- dynamic_ip: 1
  instance_definition:
    configurable: true
    constraints:
      min: 0
    default: 3
    label: Instances
    name: instances
    type: integer
  label: Diego Cell
  max_in_flight: 4%
  name: isolated_diego_cell
  property_blueprints:
  - configurable: true
    constraints:
      min: 1
    label: Cell Disk Capacity (in MB)
    name: executor_disk_capacity
    optional: true
    type: integer
  - configurable: true
    constraints:
      min: 1
    label: Cell Memory Capacity (in MB)
    name: executor_memory_capacity
    optional: true
    type: integer
  - configurable: true
    name: insecure_docker_registry_list
    optional: true
    type: string_list
  - configurable: true
    name: placement_tag
    type: string
  - configurable: false
    name: silk_daemon_client_cert
    type: rsa_cert_credentials
  - name: network_policy_agent_cert
    type: rsa_cert_credentials
  resource_definitions:
  - configurable: true
    constraints:
      min: 2048
    default: 16384
    label: RAM
    name: ram
    type: integer
  - configurable: true
    constraints:
      min: 4096
    default: 65536
    label: Ephemeral Disk
    name: ephemeral_disk
    type: integer
  - configurable: false
    default: 0
    label: Persistent Disk
    name: persistent_disk
    type: integer
  - configurable: true
    constraints:
      min: 1
      power_of_two: true
    default: 2
    label: CPU
    name: cpu
    type: integer
  resource_label: Diego Cell
  single_az_only: false
  static_ip: 0
  templates:
  - consumes: |
      consul_common: {from: consul_common_link, deployment: ((  ..cf.deployment_name  )) }
      consul_client: {from: consul_client_link, deployment: ((  ..cf.deployment_name  )) }
      consul_server: nil
    manifest: |
      consul:
        agent:
          node_name_includes_id: true
    name: consul_agent
    release: consul
  - manifest: |
      containers:
        proxy:
          enabled: (( .properties.rep_proxy_enabled.value ))
          additional_memory_allocation_mb: 32
        trusted_ca_certificates:
          - ((( /cf/diego-instance-identity-root-ca.certificate )))
          - (( $ops_manager.ca_certificate ))
          - (( $ops_manager.trusted_certificates ))
      diego:
        executor:
          disk_capacity_mb: (( executor_disk_capacity.value ))
          memory_capacity_mb: (( executor_memory_capacity.value ))
          post_setup_hook: sh -c "rm -f /home/vcap/app/.java-buildpack.log /home/vcap/app/**/.java-buildpack.log"
          post_setup_user: "root"
          instance_identity_ca_cert: ((( /cf/diego-instance-identity-intermediate-ca.certificate )))
          instance_identity_key: ((( /cf/diego-instance-identity-intermediate-ca.private_key )))
        rep:
          use_azure_fault_domains: true
          preloaded_rootfses: '(( .properties.enable_grootfs.value ? .properties.rep_preloaded_rootfses_grootfs.value : .properties.rep_preloaded_rootfses_garden.value ))'
          placement_tags: [ (( placement_tag.value )) ]
      enable_declarative_healthcheck: true
      logging:
        format:
          timestamp: (( ..cf.properties.diego_log_timestamp_format.selected_option.parsed_manifest(timestamp_format) ))
      loggregator:
        use_v2_api: true
        ca_cert: (( $ops_manager.ca_certificate ))
        cert: (( .properties.loggregator_client_cert.cert_pem ))
        key: (( .properties.loggregator_client_cert.private_key_pem ))
      tls:
        ca_cert: (( $ops_manager.ca_certificate ))
        cert: (( .properties.rep_server_cert_v2.cert_pem ))
        key: (( .properties.rep_server_cert_v2.private_key_pem ))
    name: rep
    release: diego
  - consumes: |
      nats: {from: nats, deployment: ((  ..cf.deployment_name  )) }
    manifest: |
      diego:
        route_emitter:
          bbs:
            ca_cert: (( $ops_manager.ca_certificate ))
            client_cert: (( .properties.bbs_client_cert.cert_pem ))
            client_key: (( .properties.bbs_client_cert.private_key_pem ))
          local_mode: true
      internal_routes:
        enabled: (( ..cf.properties.enable_service_discovery_for_apps.value ))
      logging:
        format:
          timestamp: (( ..cf.properties.diego_log_timestamp_format.selected_option.parsed_manifest(timestamp_format) ))
      loggregator:
        ca_cert: (( $ops_manager.ca_certificate ))
        cert: (( .properties.loggregator_client_cert.cert_pem ))
        key: (( .properties.loggregator_client_cert.private_key_pem ))
        use_v2_api: true
      register_direct_instance_routes: (( ..cf.properties.container_networking_interface_plugin.selected_option.parsed_manifest(use_container_address) ))
      tcp:
        enabled: true
      uaa:
        ca_cert: (( $ops_manager.ca_certificate ))
        client_name: (( ..cf.uaa.tcp_emitter_credentials.identity ))
        client_secret: (( ..cf.uaa.tcp_emitter_credentials.password ))
    name: route_emitter
    release: diego
  - manifest: |
      tls:
        ca_certificate: (( $ops_manager.ca_certificate ))
        certificate: (( .properties.bbs_client_cert.cert_pem ))
        private_key: (( .properties.bbs_client_cert.private_key_pem ))
    name: cfdot
    release: diego
  - manifest: |
      garden:
        cleanup_process_dirs_on_wait: true
        debug_listen_address: 127.0.0.1:17019
        deny_networks:
        - 0.0.0.0/0
        deprecated_use_garden_shed: '(( .properties.enable_grootfs.value ? false : true ))'
        destroy_containers_on_start: true
        graph_cleanup_threshold_in_mb: (( .properties.garden_disk_cleanup.selected_option.parsed_manifest(graph_cleanup_threshold_in_mb) ))
        http_proxy: (( $ops_manager.http_proxy ))
        https_proxy: (( $ops_manager.https_proxy ))
        insecure_docker_registry_list: (( insecure_docker_registry_list.parsed_strings ))
        network_plugin: /var/vcap/packages/runc-cni/bin/garden-external-networker
        network_plugin_extra_args:
        - --configFile=/var/vcap/jobs/garden-cni/config/adapter.json
        no_proxy: (( $ops_manager.no_proxy ))
        persistent_image_list: '(( .properties.enable_grootfs.value ? .properties.rep_preloaded_rootfses_grootfs.value : .properties.rep_preloaded_rootfses_garden.value ))'
      grootfs:
        graph_cleanup_threshold_in_mb: (( .properties.garden_disk_cleanup.selected_option.parsed_manifest(graph_cleanup_threshold_in_mb) ))
        insecure_docker_registry_list: (( insecure_docker_registry_list.parsed_strings ))
        reserved_space_for_other_jobs_in_mb: -1
        tls:
          ca_cert: (( $ops_manager.ca_certificate ))
          cert: (( .properties.rep_server_cert.cert_pem ))
          key: (( .properties.rep_server_cert.private_key_pem ))
    name: garden
    release: garden-runc
  - manifest: |
      cflinuxfs2-rootfs:
        trusted_certs: |
          (( $ops_manager.trusted_certificates ))
          (( $ops_manager.ca_certificate ))
          ((( /cf/diego-instance-identity-root-ca.certificate )))
    name: cflinuxfs2-rootfs-setup
    release: cflinuxfs2
  - manifest: |
      loggregator:
        tls:
          ca_cert: (( $ops_manager.ca_certificate ))
          metron:
            cert: (( .properties.metron_tls_cert.cert_pem ))
            key: (( .properties.metron_tls_cert.private_key_pem ))
    name: metron_agent
    release: loggregator
  - consumes: |
      cf_network: { from: cf_network, deployment: ((  ..cf.deployment_name  )) }
    manifest: |
      disable: (( ..cf.properties.container_networking_interface_plugin.selected_option.parsed_manifest(disable_silk) ))
      dns_servers: '(( $director.dns_release_present ? ..cf.properties.bosh_dns_servers.parsed_strings : ..cf.properties.container_networking_interface_plugin.silk.dns_servers.parsed_strings ))'
      mtu: (( ..cf.properties.container_networking_interface_plugin.silk.network_mtu.value ))
      iptables_logging: (( ..cf.properties.container_networking_interface_plugin.silk.enable_log_traffic.value ))
      iptables_accepted_udp_logs_per_sec: (( ..cf.properties.container_networking_interface_plugin.silk.iptables_accepted_udp_logs_per_sec.value ))
      iptables_denied_logs_per_sec: (( ..cf.properties.container_networking_interface_plugin.silk.iptables_denied_logs_per_sec.value ))
    name: silk-cni
    release: silk
  - consumes: |
      cf_network: {from: cf_network, deployment: (( ..cf.deployment_name )) }
    manifest: |
      ca_cert: (( $ops_manager.ca_certificate ))
      client_cert: (( ..cf.diego_database.silk_daemon_client_cert.cert_pem ))
      client_key: (( ..cf.diego_database.silk_daemon_client_cert.private_key_pem ))
      disable: (( ..cf.properties.container_networking_interface_plugin.selected_option.parsed_manifest(disable_silk) ))
      vtep_port: (( ..cf.properties.container_networking_interface_plugin.silk.vtep_port.value ))
    name: silk-daemon
    release: silk
  - manifest: |
      cni_config_dir: (( ..cf.properties.container_networking_interface_plugin.selected_option.parsed_manifest(cni_config_dir) ))
      cni_plugin_dir: (( ..cf.properties.container_networking_interface_plugin.selected_option.parsed_manifest(cni_plugin_dir) ))
      search_domains: (( .properties.cf_networking_search_domains.parsed_strings ))
    name: garden-cni
    release: cf-networking
  - manifest: |
      disable: (( ..cf.properties.container_networking_interface_plugin.selected_option.parsed_manifest(disable_silk) ))
    name: netmon
    release: silk
  - manifest: |
      ca_cert: (( $ops_manager.ca_certificate ))
      client_cert: (( ..cf.properties.network_policy_agent_cert.cert_pem ))
      client_key: (( ..cf.properties.network_policy_agent_cert.private_key_pem ))
      disable: (( ..cf.properties.container_networking_interface_plugin.selected_option.parsed_manifest(disable_silk) ))
      iptables_accepted_udp_logs_per_sec: (( ..cf.properties.container_networking_interface_plugin.silk.iptables_accepted_udp_logs_per_sec.value ))
      iptables_logging: (( ..cf.properties.container_networking_interface_plugin.silk.enable_log_traffic.value ))
      policy_server:
        hostname: network-policy-server.service.cf.internal
    name: vxlan-policy-agent
    release: silk
  - manifest: |
      nfsv3driver: (( .properties.nfs_volume_driver.selected_option.parsed_manifest(nfsv3driver_properties) ))
    name: nfsv3driver
    release: nfs-volume
  - manifest: |
      syslog: (( .properties.system_logging.selected_option.parsed_manifest(syslog) ))
    name: syslog_forwarder
    release: syslog
  - consumes: |
      service-discovery-controller: {from: service-discovery-controller, deployment: (( ..cf.deployment_name )) }
    manifest: |
      cf_app_sd_disable: "(( ..cf.properties.enable_service_discovery_for_apps.value ? false : true ))"
      dnshttps:
        client:
          tls:
            certificate: (( .properties.service_discovery_client_tls.cert_pem ))
            private_key: (( .properties.service_discovery_client_tls.private_key_pem ))
        server:
          ca: (( $ops_manager.ca_certificate ))
    name: bosh-dns-adapter
    release: cf-networking
  - name: iptables-logger
    release: silk
kiln_metadata:
  metadata_git_sha: c839fc2b06ad4b6de68a7587cc915d36d5027f5c
label: PCF Isolation Segment
metadata_version: "2.2"
minimum_version_for_upgrade: 2.1.0
name: p-isolation-segment
post_deploy_errands: []
product_version: 2.2.4
property_blueprints:
- configurable: false
  name: bbs_client_cert
  type: rsa_cert_credentials
- configurable: true
  name: cf_networking_search_domains
  optional: true
  type: string_list
- configurable: true
  default: enable
  name: container_networking
  option_templates:
  - name: enable
    select_value: enable
  - name: disable
    select_value: disable
  type: selector
- configurable: true
  default: true
  name: enable_grootfs
  type: boolean
- configurable: true
  default: threshold
  name: garden_disk_cleanup
  option_templates:
  - name: never
    named_manifests:
    - manifest: |
        -1
      name: graph_cleanup_threshold_in_mb
    select_value: never
  - name: routine
    named_manifests:
    - manifest: |
        0
      name: graph_cleanup_threshold_in_mb
    select_value: routine
  - name: threshold
    named_manifests:
    - manifest: |
        (( .properties.garden_disk_cleanup.threshold.cleanup_threshold_in_mb.value ))
      name: graph_cleanup_threshold_in_mb
    property_blueprints:
    - constraints:
        min: 1
      default: 10240
      name: cleanup_threshold_in_mb
      type: integer
    select_value: threshold
  type: selector
- configurable: true
  default: ECDHE-RSA-AES128-GCM-SHA256:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
  name: gorouter_ssl_ciphers
  type: text
- configurable: true
  default: none
  name: haproxy_client_cert_validation
  option_templates:
  - name: none
    named_manifests:
    - manifest: |
        false
      name: client_cert_validation
    select_value: none
  - name: request
    named_manifests:
    - manifest: |
        true
      name: client_cert_validation
    select_value: request
  type: selector
- configurable: false
  name: haproxy_client_certificate
  type: rsa_cert_credentials
- configurable: true
  default: enable
  name: haproxy_forward_tls
  option_templates:
  - name: enable
    named_manifests:
    - manifest: |
        443
      name: backend_port
    - manifest: |
        "verify"
      name: backend_ssl
    property_blueprints:
    - configurable: true
      name: backend_ca
      type: text
    select_value: enable
  - name: disable
    named_manifests:
    - manifest: |
        80
      name: backend_port
    - manifest: |
        "off"
      name: backend_ssl
    select_value: disable
  type: selector
- configurable: true
  default: disable
  name: haproxy_hsts_support
  option_templates:
  - name: enable
    named_manifests:
    - manifest: |
        true
      name: hsts_enable
    - manifest: |
        (( .properties.haproxy_hsts_support.enable.include_subdomains.value ))
      name: hsts_include_subdomains
    - manifest: |
        (( .properties.haproxy_hsts_support.enable.max_age.value ))
      name: hsts_max_age
    - manifest: |
        (( .properties.haproxy_hsts_support.enable.enable_preload.value ))
      name: hsts_preload
    property_blueprints:
    - configurable: true
      default: 31536000
      name: max_age
      type: integer
    - configurable: true
      default: false
      name: include_subdomains
      type: boolean
    - configurable: true
      default: false
      name: enable_preload
      type: boolean
    select_value: enable
  - name: disable
    named_manifests:
    - manifest: |
        false
      name: hsts_enable
    - manifest: |
        false
      name: hsts_include_subdomains
    - manifest: |
        0
      name: hsts_max_age
    - manifest: |
        false
      name: hsts_preload
    select_value: disable
  type: selector
- configurable: true
  default: 16384
  name: haproxy_max_buffer_size
  type: integer
- configurable: true
  default: DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384
  name: haproxy_ssl_ciphers
  type: text
- configurable: false
  name: loggregator_client_cert
  type: rsa_cert_credentials
- configurable: false
  default:
    domains:
    - metron
  name: metron_tls_cert
  type: rsa_cert_credentials
- configurable: true
  name: networking_poe_ssl_certs
  named_manifests:
  - manifest: |
      cert_chain: (( current_record.certificate.cert_pem ))
      private_key: (( current_record.certificate.private_key_pem ))
    name: routing_certificates_and_private_keys
  property_blueprints:
  - configurable: true
    name: name
    type: string
  - configurable: true
    name: certificate
    type: rsa_cert_credentials
  type: collection
- configurable: true
  default: terminate_at_router
  name: networking_point_of_entry
  option_templates:
  - name: terminate_at_router
    select_value: terminate_at_router
  - name: terminate_before_router
    select_value: terminate_before_router
  type: selector
- configurable: true
  default: enable
  name: nfs_volume_driver
  option_templates:
  - name: enable
    named_manifests:
    - manifest: |
        disable: false
        ldap_svc_user: (( .properties.nfs_volume_driver.enable.ldap_service_account_user.value ))
        ldap_svc_password: (( .properties.nfs_volume_driver.enable.ldap_service_account_password.value ))
        ldap_host: (( .properties.nfs_volume_driver.enable.ldap_server_host.value ))
        ldap_port: (( .properties.nfs_volume_driver.enable.ldap_server_port.value ))
        ldap_user_fqdn: (( .properties.nfs_volume_driver.enable.ldap_user_fqdn.value ))
      name: nfsv3driver_properties
    property_blueprints:
    - configurable: true
      name: ldap_service_account_user
      optional: true
      type: string
    - configurable: true
      name: ldap_service_account_password
      optional: true
      type: secret
    - configurable: true
      name: ldap_server_host
      optional: true
      type: string
    - configurable: true
      name: ldap_server_port
      optional: true
      type: integer
    - configurable: true
      name: ldap_user_fqdn
      optional: true
      type: string
    select_value: enable
  - name: disable
    named_manifests:
    - manifest: |
        disable: true
      name: nfsv3driver_properties
    select_value: disable
  type: selector
- configurable: false
  default:
  - cflinuxfs2:/var/vcap/packages/cflinuxfs2/rootfs
  name: rep_preloaded_rootfses_garden
  type: string_list
- configurable: false
  default:
  - cflinuxfs2:/var/vcap/packages/cflinuxfs2/rootfs.tar
  name: rep_preloaded_rootfses_grootfs
  type: string_list
- configurable: true
  default: false
  name: rep_proxy_enabled
  type: boolean
- configurable: false
  default:
    domains:
    - cell.service.cf.internal
    - '*.cell.service.cf.internal'
  name: rep_server_cert
  type: rsa_cert_credentials
- configurable: false
  default:
    domains:
    - '*.cell.service.cf.internal'
    - cell.service.cf.internal
    - 127.0.0.1
    - localhost
  name: rep_server_cert_v2
  type: rsa_cert_credentials
- configurable: true
  default: 500
  name: router_backend_max_conn
  type: integer
- configurable: true
  default: request
  name: router_client_cert_validation
  option_templates:
  - name: none
    named_manifests:
    - manifest: |
        none
      name: client_cert_validation
    select_value: none
  - name: request
    named_manifests:
    - manifest: |
        request
      name: client_cert_validation
    select_value: request
  - name: require
    named_manifests:
    - manifest: |
        require
      name: client_cert_validation
    select_value: require
  type: selector
- configurable: true
  default: false
  name: router_enable_proxy
  type: boolean
- configurable: true
  default: enable
  name: router_keepalive_connections
  option_templates:
  - name: enable
    named_manifests:
    - manifest: |
        49000
      name: max_idle_connections
    select_value: enable
  - name: disable
    named_manifests:
    - manifest: |
        0
      name: max_idle_connections
    select_value: disable
  type: selector
- configurable: false
  name: routing_backends_client_cert
  type: rsa_cert_credentials
- configurable: true
  name: routing_custom_ca_certificates
  optional: true
  type: text
- configurable: true
  default: false
  name: routing_disable_http
  type: boolean
- configurable: true
  default: log_client_ips
  name: routing_log_client_ips
  option_templates:
  - name: log_client_ips
    named_manifests:
    - manifest: |
        false
      name: disable_log_forwarded_for
    - manifest: |
        false
      name: disable_log_source_ips
    select_value: log_client_ips
  - name: disable_x_forwarded_for
    named_manifests:
    - manifest: |
        true
      name: disable_log_forwarded_for
    - manifest: |
        false
      name: disable_log_source_ips
    select_value: disable_x_forwarded_for
  - name: disable_all_log_client_ips
    named_manifests:
    - manifest: |
        true
      name: disable_log_forwarded_for
    - manifest: |
        true
      name: disable_log_source_ips
    select_value: disable_all_log_client_ips
  type: selector
- configurable: true
  default: tls_v1_2
  name: routing_minimum_tls_version
  option_templates:
  - name: tls_v1_0
    named_manifests:
    - manifest: |
        TLSv1.0
      name: min_tls_version
    - manifest: |
        false
      name: disable_tls_10
    - manifest: |
        false
      name: disable_tls_11
    select_value: tls_v1_0
  - name: tls_v1_1
    named_manifests:
    - manifest: |
        TLSv1.1
      name: min_tls_version
    - manifest: |
        true
      name: disable_tls_10
    - manifest: |
        false
      name: disable_tls_11
    select_value: tls_v1_1
  - name: tls_v1_2
    named_manifests:
    - manifest: |
        TLSv1.2
      name: min_tls_version
    - manifest: |
        true
      name: disable_tls_10
    - manifest: |
        true
      name: disable_tls_11
    select_value: tls_v1_2
  type: selector
- configurable: true
  default: isolation_segment_only
  name: routing_table_sharding_mode
  option_templates:
  - name: isolation_segment_only
    named_manifests:
    - manifest: |
        segments
      name: sharding_mode
    - manifest: |
        ['(( .isolated_diego_cell.placement_tag.value ))']
      name: isolation_segments
    - manifest: |
        false
      name: routing_api_enabled
    select_value: isolation_segment_only
  - name: no_isolation_segment
    named_manifests:
    - manifest: |
        shared-and-segments
      name: sharding_mode
    - manifest: |
        []
      name: isolation_segments
    - manifest: |
        true
      name: routing_api_enabled
    select_value: no_isolation_segment
  type: selector
- configurable: true
  default: load_balancer
  name: routing_tls_termination
  option_templates:
  - name: load_balancer
    named_manifests:
    - manifest: |
        always_forward
      name: gorouter_forwarded_client_cert
    select_value: load_balancer
  - name: ha_proxy
    named_manifests:
    - manifest: |
        forward
      name: gorouter_forwarded_client_cert
    select_value: ha_proxy
  - name: router
    named_manifests:
    - manifest: |
        sanitize_set
      name: gorouter_forwarded_client_cert
    select_value: router
  type: selector
- configurable: false
  default:
    domains:
    - service-discovery-controller.service.cf.internal
  name: service_discovery_client_tls
  type: rsa_cert_credentials
- configurable: true
  name: skip_cert_verify
  type: boolean
- configurable: true
  default: disabled
  name: system_logging
  option_templates:
  - name: disabled
    named_manifests:
    - manifest: |
        migration:
          disabled: true
      name: syslog
    - manifest: ""
      name: syslog_url
    select_value: disabled
  - name: enabled
    named_manifests:
    - manifest: |
        address: (( .properties.system_logging.enabled.host.value ))
        port: (( .properties.system_logging.enabled.port.value ))
        transport: (( .properties.system_logging.enabled.protocol.value ))
        tls_enabled: (( .properties.system_logging.enabled.tls_enabled.value ))
        ca_cert: (( .properties.system_logging.enabled.tls_ca_cert.value ))
        permitted_peer: (( .properties.system_logging.enabled.tls_permitted_peer.value ))
        use_tcp_for_file_forwarding_local_transport: (( .properties.system_logging.enabled.use_tcp_for_file_forwarding_local_transport.value ))
        custom_rule: |
          (( .properties.system_logging.enabled.syslog_rule.value ))
          if ($programname startswith "vcap.") then stop
          "(( ..cf.properties.container_networking_interface_plugin.silk.enable_log_traffic.value ? .properties.system_logging.selected_option.parsed_manifest(iptables_logging_enabled) : .properties.system_logging.selected_option.parsed_manifest(iptables_logging_disabled) ))"
      name: syslog
    - manifest: |
        if $programname == 'kernel' and ($msg contains "DENY_" or $msg contains "OK_") then {
         -/var/log/kern.log
         stop
        }
      name: iptables_logging_enabled
    - manifest: |
        ""
      name: iptables_logging_disabled
    property_blueprints:
    - configurable: true
      name: host
      type: network_address
    - configurable: true
      name: port
      type: port
    - configurable: true
      name: protocol
      options:
      - label: TCP protocol
        name: tcp
      - label: RELP protocol
        name: relp
      - label: UDP protocol
        name: udp
      type: dropdown_select
    - configurable: true
      default: false
      name: tls_enabled
      optional: true
      type: boolean
    - configurable: true
      name: tls_permitted_peer
      optional: true
      type: string
    - configurable: true
      name: tls_ca_cert
      optional: true
      type: ca_certificate
    - configurable: true
      default: false
      name: use_tcp_for_file_forwarding_local_transport
      type: boolean
    - configurable: true
      name: syslog_rule
      optional: true
      type: text
    select_value: enabled
  type: selector
provides_product_versions:
- name: p-isolation-segment
  version: 2.2.4
rank: 89
releases:
- file: cf-networking-2.3.0-3586.27.0.tgz
  name: cf-networking
  sha1: aac4a8fd00bc1f772c2f7176dfcfc11d1d1154e9
  version: 2.3.0
- file: cflinuxfs2-1.228.0-3586.27.0.tgz
  name: cflinuxfs2
  sha1: 70903272eed6efd881e010872d6acae1ce8df794
  version: 1.228.0
- file: consul-195.0.0-3586.27.0.tgz
  name: consul
  sha1: 4e65199935fbc201abe8a8ac6e23e7780acc3170
  version: "195"
- file: diego-2.8.2-3586.27.0.tgz
  name: diego
  sha1: f2853efe9805c835dfe4848faffb7895df469e0c
  version: 2.8.2
- file: garden-runc-1.13.3-3586.27.0.tgz
  name: garden-runc
  sha1: 8621c42d248395d4f3353f6b1495b1312028ca3e
  version: 1.13.3
- file: haproxy-8.7.0-3586.27.0.tgz
  name: haproxy
  sha1: 69d1a8fff8bb0ff52535a0350237edd1439c9a71
  version: 8.7.0
- file: loggregator-102.4.0-3586.27.0.tgz
  name: loggregator
  sha1: 4efb91dbae79d0d81ca5e5f3ac696737e27a6b29
  version: "102.4"
- file: nfs-volume-1.2.2-3586.27.0.tgz
  name: nfs-volume
  sha1: bb0f07becf7640f7e7d94374721d3281973d3de0
  version: 1.2.2
- file: routing-0.178.2-3586.27.0.tgz
  name: routing
  sha1: 2ea9e434dd96fa87d7d09f7f44426257ee2d26a3
  version: 0.178.2
- file: silk-2.3.0-3586.27.0.tgz
  name: silk
  sha1: f51667fc3d2389060d9f3c2cbea2625f2d8a0ae3
  version: 2.3.0
- file: syslog-11.3.2-3586.27.0.tgz
  name: syslog
  sha1: 737e66d64a916aa122133dd8565875ce4e89d8f3
  version: 11.3.2
requires_product_versions:
- name: cf
  version: ~> 2.2.0
serial: false
stemcell_criteria:
  os: ubuntu-trusty
  version: "3586.27"
variables:
- name: router-route-services-secret
  type: password
