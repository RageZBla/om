---
name: p-spring-cloud-services
product_version: 1.5.6
minimum_version_for_upgrade: 1.0.0
metadata_version: '1.11'
stemcell_criteria:
  os: ubuntu-trusty
  version: '3468'
  requires_cpi: false
releases:
- name: spring-cloud-broker
  file: spring-cloud-broker-1.5.6-build.7.tgz
  version: 1.5.6-build.7
  md5: d87b2597df142d15b2c8bb67c5c5eb07
- name: consul
  url: https://github.com/cloudfoundry-incubator/consul-release/releases/download/v191/consul-release-191.tgz
  file: consul-release-191.tgz
  version: '191'
  md5: ed8f4b2a2fac2fc256d7500cb0fbbcb0
  commit_hash: 60a8ea4
requires_product_versions:
- name: p-rabbitmq
  version: "~> 1.7"
label: Spring Cloud Services
description: Spring Cloud Services  ..
icon_image: 
rank: 50
post_deploy_errands:
- name: deploy-service-broker
- name: register-service-broker
- name: run-smoke-tests
pre_delete_errands:
- name: destroy-service-broker
variables:
- name: SCS-ENCRYPTION-KEY
  type: password
- name: SCS-BROKER-CREDENTIALS
  type: user
- name: SCS-WORKER-PASSWORD
  type: password
- name: SCS-INSTANCES-PASSWORD
  type: password
- name: SCS-WORKER-CLIENT-SECRET
  type: password
- name: SCS-BROKER-DASHBOARD-SECRET
  type: password
form_types:
- name: scs_configuration
  label: Spring Cloud Services
  description: Spring Cloud Services configuration
  property_inputs:
  - reference: ".deploy-service-broker.broker_max_instances"
    label: Service instance limit
    description: Configure the maximum number of service instances that can be provisioned
      by the Spring Cloud Services service broker.
  - reference: ".deploy-service-broker.instances_app_push_timeout"
    label: App push timeout
    description: Configure the maximum amount of time, in minutes, that the service
      broker will wait for service instance apps to be deployed successfully. The
      broker will use a default value if empty.
  - reference: ".deploy-service-broker.buildpack"
    label: Buildpack
    description: Configure the buildpack to use when pushing the service broker apps
      and service instance apps. Leave empty to auto-detect the buildpack.
  - reference: ".deploy-service-broker.disable_cert_check"
    label: Do not validate that SSL certificates are properly configured
    description: If unchecked, installation will fail if required SSL certificates
      are missing, and missing certificates will be logged.
  - reference: ".deploy-service-broker.persistence_store_service"
    label: Persistence store service
    description: 'Configure the persistence store service (MySQL compatible database
      only) used by the Spring Cloud Services service broker. (WARNING: Changing the
      default persistence store service can cause Spring Cloud Services to no longer
      work as expected.)'
  - reference: ".deploy-service-broker.persistence_store_service_plan"
    label: Persistence store service plan
    description: 'Configure the persistence store service plan (MySQL compatible database
      plan only) used by the Spring Cloud Services service broker. (WARNING: Changing
      the default persistence store service plan can cause Spring Cloud Services to
      no longer work as expected.)'
  - reference: ".deploy-service-broker.message_bus_service"
    label: Message bus service
    description: 'Configure the message bus service used by the Spring Cloud Services
      service broker. (WARNING: Changing the default message bus service can cause
      Spring Cloud Services to no longer work as expected.) NOTE: This does not affect
      the message bus service used by provisioned service instances.'
  - reference: ".deploy-service-broker.message_bus_service_plan"
    label: Message bus service plan
    description: 'Configure the message bus service plan used by the Spring Cloud
      Services service broker. (WARNING: Changing the default message bus service
      plan can cause Spring Cloud Services to no longer work as expected.) NOTE: This
      does not affect the message bus service plan used by provisioned service instances.'
  - reference: ".register-service-broker.enable_global_access"
    label: Enable service access across all organizations
    description: When checked, all Spring Cloud Services will be added to the marketplace
      for all organizations during the installation process. Uncheck this box to prevent
      the installer from changing the current Spring Cloud Services visibility in
      the marketplace across organizations.
  - reference: ".deploy-service-broker.secure_credentials"
    label: Secure service instance credentials
    description: When checked, service instance credentials will be stored in CredHub.
      Enable only when installing with PCF 2.0 or greater and this feature is also
      enabled in the PAS tile.
property_blueprints:
- name: hidden_credhub_selector
  type: selector
  configurable: false
  default: default
  option_templates:
  - name: default_option
    select_value: default
    named_manifests:
    - name: consumes_section_credhub_disabled
      manifest: 'credhub: nil

'
    - name: consumes_section_credhub_enabled
      manifest: 'credhub: {from: credhub, deployment: "(( ..cf.deployment_name ))"}

'
job_types:
- name: deploy-service-broker
  resource_label: Broker Deployer
  templates:
  - name: deploy-service-broker
    release: spring-cloud-broker
    consumes: '"(( secure_credentials.value ? .properties.hidden_credhub_selector.selected_option.parsed_manifest(consumes_section_credhub_enabled)
      : .properties.hidden_credhub_selector.selected_option.parsed_manifest(consumes_section_credhub_disabled)
      ))"

'
  - name: consul_agent
    release: consul
    consumes: |
      consul_common: {from: consul_common_link, deployment: "(( ..cf.deployment_name ))"}
      consul_client: {from: consul_client_link, deployment: "(( ..cf.deployment_name ))"}
      consul_server: nil
      consul: nil
  errand: true
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 512
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 4096
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  single_az_only: true
  instance_definition:
    name: instances
    type: integer
    configurable: false
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap
  - name: product_name
    type: string
    configurable: false
  - name: app_name
    type: string
    configurable: false
  - name: app_uri
    type: string
    configurable: false
  - name: broker_org
    type: string
    configurable: false
  - name: broker_space
    type: string
    configurable: false
  - name: instances_org
    type: string
    configurable: false
  - name: instances_space
    type: string
    configurable: false
  - name: memory
    type: integer
    configurable: false
  - name: persistence_store_service
    type: string
    configurable: true
    default: p-mysql
  - name: persistence_store_service_plan
    type: string
    configurable: true
    default: 100mb
  - name: message_bus_service
    type: string
    configurable: true
    default: p-rabbitmq
  - name: message_bus_service_plan
    type: string
    configurable: true
    default: standard
  - name: hystrix_message_bus_service
    type: string
    configurable: false
    default: p-rabbitmq
  - name: hystrix_message_bus_service_plan
    type: string
    configurable: false
    default: standard
  - name: worker_client_id
    type: string
    configurable: false
  - name: worker_credentials_user
    type: string
    configurable: false
    default: admin
  - name: instances_credentials_user
    type: string
    configurable: false
    default: p-spring-cloud-services
  - name: broker_max_instances
    type: integer
    configurable: true
    default: 100
  - name: buildpack
    type: string
    configurable: true
    optional: true
  - name: disable_cert_check
    type: boolean
    configurable: true
    default: false
  - name: instances_app_push_timeout
    type: integer
    configurable: true
    optional: true
  - name: broker_health_check_type
    type: string
    configurable: false
  - name: broker_http_health_check_endpoint
    type: string
    configurable: false
  - name: secure_credentials
    type: boolean
    configurable: true
    default: false
  manifest: |
    domain: (( ..cf.cloud_controller.system_domain.value ))
    app_domains:
    - (( ..cf.cloud_controller.apps_domain.value ))
    ssl:
      skip_cert_verify: (( ..cf.ha_proxy.skip_cert_verify.value ))
    spring_cloud_broker:
      product_name: (( product_name.value ))
      app_name: (( app_name.value ))
      app_uri: (( app_uri.value ))
      broker:
        org_name: (( broker_org.value ))
        space_name: (( broker_space.value ))
        user: ((( SCS-BROKER-CREDENTIALS.username )))
        password: ((( SCS-BROKER-CREDENTIALS.password )))
        max_instances: (( .deploy-service-broker.broker_max_instances.value ))
        service_registry:
          name: "p-service-registry"
          display_name: "Service Registry"
          id: "e31aadf0-053f-4678-a8d0-b1e62ab78078"
          plans:
          - id: "541ae588-0af6-4e63-ba54-4f7a8972e30d"
            name: "standard"
            description: "Standard Plan"
            free: true
            bindable: true
            bullets: "Single-tenant,Netflix OSS Eureka"
        config_server:
          name: "p-config-server"
          display_name: "Config Server"
          id: "233abae5-0699-4acd-99f6-ad83209ce676"
          plans:
          - id: "c2d8680f-69a3-48cf-99f4-66fdfdfd6170"
            name: "standard"
            description: "Standard Plan"
            free: true
            bindable: true
            bullets: "Single-tenant,Backed by user-provided Git repository"
        circuit_breaker:
          name: "p-circuit-breaker-dashboard"
          display_name: "Circuit Breaker"
          id: "f4678f95-a536-4e0e-8bdc-17a6199f7ef7"
          plans:
          - id: "00d13802-acc5-11e4-89d3-123b93f75cba"
            name: "standard"
            description: "Standard Plan"
            free: true
            bindable: true
            bullets: "Single-tenant,Netflix OSS Hystrix Dashboard,Netflix OSS Turbine"
      worker:
        client_id: (( worker_client_id.value ))
        client_secret: ((( SCS-WORKER-CLIENT-SECRET )))
        user: (( worker_credentials_user.value ))
        password: ((( SCS-WORKER-PASSWORD )))
      instances:
        org_name: (( instances_org.value ))
        space_name: (( instances_space.value ))
        instances_user: (( instances_credentials_user.value ))
        instances_password: ((( SCS-INSTANCES-PASSWORD )))
        app_push:
          timeout: (( instances_app_push_timeout.value ))
        hystrix_message_bus_service: (( hystrix_message_bus_service.value ))
        hystrix_message_bus_service_plan: (( hystrix_message_bus_service_plan.value ))
      app_push:
        timeout: 180
        memory: (( memory.value ))
      broker_dashboard_secret: ((( SCS-BROKER-DASHBOARD-SECRET )))
      persistence_store_service: (( persistence_store_service.value ))
      persistence_store_service_plan: (( persistence_store_service_plan.value ))
      message_bus_service: (( message_bus_service.value ))
      message_bus_service_plan: (( message_bus_service_plan.value ))
      service_status_timeout_min: 15
      service_status_poll_interval_ms: 5000
      encryption_key: ((( SCS-ENCRYPTION-KEY )))
      cf:
        admin_user: (( ..cf.uaa.admin_credentials.identity ))
        admin_password: (( ..cf.uaa.admin_credentials.password ))
      uaa:
        admin_client_id: (( ..cf.uaa.admin_client_credentials.identity ))
        admin_client_secret: (( ..cf.uaa.admin_client_credentials.password ))
      buildpack: (( buildpack.value ))
      disable_cert_check: (( disable_cert_check.value ))
      health_check:
        broker_health_check_type: (( broker_health_check_type.value ))
        broker_http_health_check_endpoint: (( broker_http_health_check_endpoint.value ))
- name: register-service-broker
  resource_label: Broker Registrar
  templates:
  - name: register-service-broker
    release: spring-cloud-broker
  errand: true
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 512
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 2048
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  single_az_only: true
  instance_definition:
    name: instances
    type: integer
    configurable: false
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap
  - name: product_name
    type: string
    configurable: false
  - name: app_name
    type: string
    configurable: false
  - name: app_uri
    type: string
    configurable: false
  - name: broker_org
    type: string
    configurable: false
  - name: broker_space
    type: string
    configurable: false
  - name: plan_names
    type: string
    configurable: false
  - name: enable_global_access
    type: boolean
    configurable: true
    default: true
  manifest: |
    domain: (( ..cf.cloud_controller.system_domain.value ))
    app_domains:
    - (( ..cf.cloud_controller.apps_domain.value ))
    ssl:
      skip_cert_verify: (( ..cf.ha_proxy.skip_cert_verify.value ))
    spring_cloud_broker:
      product_name: (( product_name.value ))
      broker:
        org_name: (( broker_org.value ))
        space_name: (( broker_space.value ))
        user: ((( SCS-BROKER-CREDENTIALS.username )))
        password: ((( SCS-BROKER-CREDENTIALS.password )))
        service_registry:
          name: "p-service-registry"
          plans:
          - name: "standard"
        config_server:
          name: "p-config-server"
          plans:
          - name: "standard"
        circuit_breaker:
          name: "p-circuit-breaker-dashboard"
          plans:
          - name: "standard"
      app_name: (( app_name.value ))
      app_uri: (( app_uri.value ))
      encryption_key: ((( SCS-ENCRYPTION-KEY )))
      cf:
        admin_user: (( ..cf.uaa.admin_credentials.identity ))
        admin_password: (( ..cf.uaa.admin_credentials.password ))
      uaa:
        admin_client_id: (( ..cf.uaa.admin_client_credentials.identity ))
        admin_client_secret: (( ..cf.uaa.admin_client_credentials.password ))
      enable_global_access: (( enable_global_access.value ))
- name: run-smoke-tests
  resource_label: Smoke Tests
  templates:
  - name: smoke-tests
    release: spring-cloud-broker
  errand: true
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 512
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 2048
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  single_az_only: true
  instance_definition:
    name: instances
    type: integer
    configurable: false
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap
  - name: product_name
    type: string
    configurable: false
  - name: broker_org
    type: string
    configurable: false
  - name: smoke_test_space
    type: string
    configurable: false
  manifest: |
    domain: (( ..cf.cloud_controller.system_domain.value ))
    ssl:
      skip_cert_verify: (( ..cf.ha_proxy.skip_cert_verify.value ))
    spring_cloud_broker:
      product_name: (( product_name.value ))
      broker:
        org_name: (( broker_org.value ))
        service_registry:
          name: "p-service-registry"
          plans:
          - name: "standard"
        config_server:
          name: "p-config-server"
          plans:
          - name: "standard"
        circuit_breaker:
          name: "p-circuit-breaker-dashboard"
          plans:
          - name: "standard"
      instances:
        app_push:
          timeout: (( .deploy-service-broker.instances_app_push_timeout.value ))
      smoke_test:
        user: (( ..cf.uaa.admin_credentials.identity ))
        password: (( ..cf.uaa.admin_credentials.password ))
        space: (( smoke_test_space.value ))
      encryption_key: ((( SCS-ENCRYPTION-KEY )))
      cf:
        admin_user: (( ..cf.uaa.admin_credentials.identity ))
        admin_password: (( ..cf.uaa.admin_credentials.password ))
      uaa:
        admin_client_id: (( ..cf.uaa.admin_client_credentials.identity ))
        admin_client_secret: (( ..cf.uaa.admin_client_credentials.password ))
- name: destroy-service-broker
  resource_label: Broker Deregistrar
  templates:
  - name: destroy-service-broker
    release: spring-cloud-broker
  errand: true
  resource_definitions:
  - name: ram
    type: integer
    configurable: false
    default: 512
  - name: ephemeral_disk
    type: integer
    configurable: false
    default: 4096
  - name: persistent_disk
    type: integer
    configurable: false
    default: 0
  - name: cpu
    type: integer
    configurable: false
    default: 1
  static_ip: 0
  dynamic_ip: 1
  max_in_flight: 1
  single_az_only: true
  instance_definition:
    name: instances
    type: integer
    configurable: false
    default: 1
  property_blueprints:
  - name: vm_credentials
    type: salted_credentials
    default:
      identity: vcap
  - name: product_name
    type: string
    configurable: false
  - name: app_name
    type: string
    configurable: false
  - name: app_uri
    type: string
    configurable: false
  - name: broker_org
    type: string
    configurable: false
  - name: broker_space
    type: string
    configurable: false
  - name: instances_org
    type: string
    configurable: false
  - name: instances_space
    type: string
    configurable: false
  - name: plan_names
    type: string
    configurable: false
  - name: worker_client_id
    type: string
    configurable: false
  manifest: |
    domain: (( ..cf.cloud_controller.system_domain.value ))
    app_domains:
    - (( ..cf.cloud_controller.apps_domain.value ))
    ssl:
      skip_cert_verify: (( ..cf.ha_proxy.skip_cert_verify.value ))
    spring_cloud_broker:
      product_name: (( product_name.value ))
      broker:
        org_name: (( broker_org.value ))
        space_name: (( broker_space.value ))
        user: ((( SCS-BROKER-CREDENTIALS.username )))
        password: ((( SCS-BROKER-CREDENTIALS.password )))
        service_registry:
          name: "p-service-registry"
        config_server:
          name: "p-config-server"
        circuit_breaker:
          name: "p-circuit-breaker-dashboard"
      worker:
        client_id: (( worker_client_id.value ))
        client_secret: ((( SCS-WORKER-CLIENT-SECRET )))
      instances:
        org_name: (( instances_org.value ))
        space_name: (( instances_space.value ))
        instances_user: (( .deploy-service-broker.instances_credentials_user.value ))
      app_name: (( app_name.value ))
      app_uri: (( app_uri.value ))
      encryption_key: ((( SCS-ENCRYPTION-KEY )))
      service_status_timeout_min: 15
      service_status_interval_ms: 5000
      cf:
        admin_user: (( ..cf.uaa.admin_credentials.identity ))
        admin_password: (( ..cf.uaa.admin_credentials.password ))
      uaa:
        admin_client_id: (( ..cf.uaa.admin_client_credentials.identity ))
        admin_client_secret: (( ..cf.uaa.admin_client_credentials.password ))
update:
  canaries: 1
  canary_watch_time: 60000-240000
  max_in_flight: 1
  update_watch_time: 60000-240000
